## Autogenerated by Scribe. DO NOT MODIFY.

name: Пользователи
description: |-

  API пользователей
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Пользователи
      groupDescription: |-

        API пользователей
      subgroup: ''
      subgroupDescription: ''
      title: 'Информация о пользователе'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
               "avatar": "https://cdn.example.com/avatars/abcd1234.jpg",
               "username": "ivan_petrov",
               "points": 245,
               "points_remainder": 56,
               "daily_streak": 5,
               "visits": 42,
               "average_check": "123.45",
               "telegram_id": 987654321,
               "first_name": "Иван",
               "last_name": "Петров",
               "theme": "dark",
               "created_at": "2024-12-01T14:23:45.000000Z",
               "rank": {
                 "current": "Silver",
                 "current_id": "1",
                 "next": "Gold",
                 "next_id": "2",
                 "conditions_current": { "scans": 10, "sum_spent": 5000, "streak_days": 7 },
                 "conditions_next":    { "scans": 15, "sum_spent": 15000, "streak_days": 15 },
                 "progress_current":   { "scans": 3,  "sum_spent": 1200.50, "streak_days": 2 }
               },
               "favorite": {
                 "label": "Любимое",
                 "id": "b2d5f7a4-3e56-4c1e-9c3b-123456789abc",
                 "name": "La Pergola",
                 "image_url": "https://cdn.example.com/announcements/abcd1234.jpg",
                 "rating": 4.75,
                 "checks_count": 5,
                 "sum_spent": 2345.67
               },
               "recent": {
                 "label": "Недавнее",
                 "id": "b2d5f7a4-3e56-4c1e-9c3b-123456789abc",
                 "name": "La Pergola",
                 "image_url": "https://cdn.example.com/announcements/abcd1234.jpg",
                 "rating": 15,
                 "points": 15
               },
               "referral_link": "https://t.me/YourBot?start=refToken123"
             }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "message":"Произошла ошибка",
             "error":"Подробное сообщение об ошибке"
           }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
             "message": "Произошла ошибка",
             "error": "Ошибка"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: Пользователи
      groupDescription: |-

        API пользователей
      subgroup: ''
      subgroupDescription: ''
      title: 'Обновить профиль'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      theme:
        name: theme
        description: ''
        required: false
        example: gray-black
        type: string
        enumValues:
          - white-pink
          - gray-brown
          - gray-black
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      username: b
      theme: gray-black
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "avatar": "https://…",
              "username": "Paul",
              "points": 245,
              "daily_streak": 5,
              "telegram_id": 987654321,
              "first_name": "Иван",
              "last_name": "Петров",
              "theme": "gray-brown",
              "visits": 42,
              "average_check": "123.45",
              "created_at": "2024-12-01T14:23:45.000000Z",
              "rank": {
                "current": "Bronze",
                "next": null,
                "progress": 0
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Произошла ошибка",
            "error": "Ошибка"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "theme": ["Тема должна быть одной из: white-pink, gray-brown, gray-black"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

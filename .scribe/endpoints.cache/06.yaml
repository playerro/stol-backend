## Autogenerated by Scribe. DO NOT MODIFY.

name: Офферы
description: 'API для получения списка, деталей и покупки офферов'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/offers/index
    metadata:
      groupName: Офферы
      groupDescription: 'API для получения списка, деталей и покупки офферов'
      subgroup: ''
      subgroupDescription: ''
      title: 'Список офферов'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Premium-подписка",
                "description": "Месяц доступа к премиум-функциям",
                "price": 500,
                "image_url": "https://…",
                "category": "Подписки",
                "store": "Telegram",
                "disabled": false
              },
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/offers/{offer_id}'
    metadata:
      groupName: Офферы
      groupDescription: 'API для получения списка, деталей и покупки офферов'
      subgroup: ''
      subgroupDescription: ''
      title: 'Детали оффера'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The ID of the offer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      offer_id: 1
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Premium-подписка",
              "description": "…",
              "price": 500,
              "image_url": "https://…",
              "category": "Подписки",
              "store": "Telegram",
              "disabled": false
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/offers/{offer_id}/purchase'
    metadata:
      groupName: Офферы
      groupDescription: 'API для получения списка, деталей и покупки офферов'
      subgroup: ''
      subgroupDescription: ''
      title: 'Покупка оффера'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      offer_id:
        name: offer_id
        description: 'The ID of the offer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      offer_id: 1
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Успешно куплено",
            "points": 1200,
            "purchase_id": 5
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Недостаточно баллов"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

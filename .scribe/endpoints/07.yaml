name: Уведомления
description: |-

  API для работы со списком уведомлений, подсчётом непрочитанных и пометкой прочтения.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/notifications/index
    metadata:
      groupName: Уведомления
      groupDescription: |-

        API для работы со списком уведомлений, подсчётом непрочитанных и пометкой прочтения.
      subgroup: ''
      subgroupDescription: ''
      title: 'Список уведомлений пользователя'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 10,
                "type": "purchase",
                "title": "Недавняя покупка",
                "subtitle": "Куплен Telegram Premium",
                "body": "Telegram Premium на 3 месяца будет начислен завтра.",
                "is_read": false,
                "created_at": "2025-07-26T12:34:56Z"
              },

            ],
            "meta": {
              "current_page": 1,
              "last_page": 3,
              "per_page": 20,
              "total": 45
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/notifications/unread-count
    metadata:
      groupName: Уведомления
      groupDescription: |-

        API для работы со списком уведомлений, подсчётом непрочитанных и пометкой прочтения.
      subgroup: ''
      subgroupDescription: ''
      title: 'Количество непрочитанных уведомлений'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "unread_count": 5
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/notifications/{notification_id}/read'
    metadata:
      groupName: Уведомления
      groupDescription: |-

        API для работы со списком уведомлений, подсчётом непрочитанных и пометкой прочтения.
      subgroup: ''
      subgroupDescription: ''
      title: 'Пометить уведомление как прочитанное'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notification_id:
        name: notification_id
        description: 'The ID of the notification.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notification_id: 1
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "OK"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "Forbidden"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Пользователь не найден"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

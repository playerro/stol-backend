name: Рестораны
description: 'Всё, что связано с ресторанами'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/restaurants/search
    metadata:
      groupName: Рестораны
      groupDescription: 'Всё, что связано с ресторанами'
      subgroup: ''
      subgroupDescription: ''
      title: 'Поиск ресторана по имени, ИНН или адресу'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      code:
        name: code
        description: 'UUID пользователя. Пример: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      q:
        name: q
        description: 'Search query. Минимум 3 символа.'
        required: true
        example: sush
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      code: architecto
      q: sush
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": "uuid",
                "inn": "1234567890",
                "name": "Суши-Сет",
                "rating": "4.50",
                "description": "...",
                "city": "Москва",
                "country": "Россия",
                "address": "ул. Пушкина, д.1",
                "logo_url": "https://..."
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": []
          }
        headers: []
        description: 'No results'
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "q": ["The q must be at least 3 characters."]
            }
          }
        headers: []
        description: 'Validation error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
